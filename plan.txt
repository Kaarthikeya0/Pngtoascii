1. Load png file into memory
2. Make png into grayscale (0.299 * red + 0.587 * green + 0.114 * blue)
3. Turn a region into one average (eg 3x3 grid into one pixel) (make the picture shittier)
4. Turn that value into a char (need to work out the luminosity of each char)
    "@&%QWNM0gB$#DR8mHXKAUbGOpV4d9h6PkqwSE2]ayjxY5Zoen[ult13If}C{iF|(7J)vTLs?z/*cr!+<>;=^,_:'-.` "
[0, 0.0751, 0.0829, 0.0848, 0.1227, 0.1403, 0.1559, 0.185, 0.2183, 0.2417, 0.2571, 0.2852, 0.2902, 0.2919, 0.3099, 0.3192, 0.3232, 0.3294, 0.3384, 0.3609, 0.3619, 0.3667, 0.3737, 0.3747, 0.3838, 0.3921, 0.396, 0.3984, 0.3993, 0.4075, 0.4091, 0.4101, 0.42, 0.423, 0.4247, 0.4274, 0.4293, 0.4328, 0.4382, 0.4385, 0.442, 0.4473, 0.4477, 0.4503, 0.4562, 0.458, 0.461, 0.4638, 0.4667, 0.4686, 0.4693, 0.4703, 0.4833, 0.4881, 0.4944, 0.4953, 0.4992, 0.5509, 0.5567, 0.5569, 0.5591, 0.5602, 0.5602, 0.565, 0.5776, 0.5777, 0.5818, 0.587, 0.5972, 0.5999, 0.6043, 0.6049, 0.6093, 0.6099, 0.6465, 0.6561, 0.6595, 0.6631, 0.6714, 0.6759, 0.6809, 0.6816, 0.6925, 0.7039, 0.7086, 0.7235, 0.7302, 0.7332, 0.7602, 0.7834, 0.8037, 0.9999]


5. Output that to command line or file depending on whether output file is given

Command line flags required 
Number of columns (--Rowlength) (need to work out default later)
Input file (-i)
Output file (-o) (out.txt default)
Help (-h) (provide quick start)


PNG chunks I care about alot at first
IHDR - can just read
PLTE - can just read
IDAT - need to concatenate together and then decompress
IEND

To load png file into memory, 
1. Need to check if it is actually a png file
    a. First 8 bytes match pattern (137 80 78 71 13 10 26 10)
    b. Next 4 bytes result in the number (13)
    c. 4 bytes after that results in char chunk_code[4] == IHDR (image header)
2. Check if there is a PLTE chunk
    a. Check if the PLTE chunk is valid (to do so check the chunk length % 3 == 0) && (colour type is 3, 2, 6 not 0 or 4) (compulsory for 3)
    a. If there is a PLTE chunk process it into the memory (use a struct of RGB and an array of these triples) this array will be malloced to ensure that it can work with different PLTE lengths



decompression done
calculate number of bits per pixel: 2, 4, 8, 16, 32
filters:

filter 0: no filters
filter 1: subtraction
